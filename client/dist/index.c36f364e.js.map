{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM;IACN,MAAM;AACR;AAEA,IAAI;AACJ,IAAI;AAEJ,eAAe;IACb,IAAI,OAAO,QAAQ,EAAE;QACnB,OAAO,IAAI,GAAG,IAAI,KAAK;QACvB,IAAI;YACF,MAAM,SAAS,MAAM;YACrB,MAAM,WAAW,MAAM,KAAK,GAAG,CAAC,WAAW;YAC3C,iBAAiB,QAAQ,CAAC,EAAE;QAC9B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;QAChB;IACF,OAAO,IAAI,OAAO,IAAI,EACpB,OAAO,IAAI,GAAG,IAAI,KAAK,KAAK,eAAe;SAE3C,QAAQ,KAAK,CAAC;IAGhB,MAAM,YAAY,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK;IAC1C,MAAM,kBAAkB,SAAS,QAAQ,CAAC,UAAU;IAEpD,IAAI,iBACF,mBAAmB,IAAI,KAAK,GAAG,CAAC,QAAQ,CACtC,SAAS,GAAG,EACZ,gBAAgB,OAAO;SAGzB,QAAQ,KAAK,CAAC;AAElB;AAEA,eAAe;IACb,MAAM,iBAAiB,SAAS,cAAc,CAAC;IAC/C,MAAM,QAAQ,MAAM,iBAAiB,OAAO,CAAC,WAAW,GAAG,IAAI;IAE/D,MAAM,OAAO,CAAC,CAAC;QACb,MAAM,cAAc,SAAS,aAAa,CAAC;QAC3C,YAAY,SAAS,GAAG,CAAC;;;2CAGc,EAAE,KAAK,KAAK,CAAC;yCACf,EAAE,KAAK,OAAO,CAAC;gDACR,EAAE,KAAK,KAAK,CAAC;sEACS,EAAE,KAAK,EAAE,CAAC;;;QAGxE,CAAC;QACL,eAAe,WAAW,CAAC;IAC7B;AACF;AAEA,eAAe;IACb,MAAM,YAAY,SAAS,cAAc,CAAC,aAAa,KAAK;IAC5D,MAAM,cAAc,SAAS,cAAc,CAAC,eAAe,KAAK;IAEhE,MAAM,iBAAiB,OAAO,CAC3B,UAAU,CAAC,WAAW,aACtB,IAAI,CAAC;QAAE,MAAM;IAAe;IAE/B,0CAA0C;IAC1C,SAAS,cAAc,CAAC,kBAAkB,SAAS,GAAG;IACtD,MAAM;AACR;AAEA,eAAe,SAAS,MAAM;IAC5B,MAAM,cAAc,SAAS,cAAc,CAAC;IAC5C,MAAM,iBAAiB,UAAU,YAAY,KAAK;IAElD,MAAM,iBAAiB,OAAO,CAC3B,QAAQ,CAAC,gBACT,IAAI,CAAC;QAAE,MAAM;IAAe;IAE/B,oCAAoC;IACpC,SAAS,cAAc,CAAC,kBAAkB,SAAS,GAAG;IACtD,MAAM;AACR","sources":["index.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", async () => {\r\n  await initWeb3();\r\n  await displayPosts();\r\n});\r\n\r\nlet contractInstance;\r\nlet currentAccount;\r\n\r\nasync function initWeb3() {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(ethereum);\r\n    try {\r\n      await ethereum.enable();\r\n      const accounts = await web3.eth.getAccounts();\r\n      currentAccount = accounts[0];\r\n    } catch (error) {\r\n      console.error(\"User denied account access\");\r\n    }\r\n  } else if (window.web3) {\r\n    window.web3 = new Web3(web3.currentProvider);\r\n  } else {\r\n    console.error(\"No Ethereum provider detected\");\r\n  }\r\n\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = BlogPost.networks[networkId];\r\n\r\n  if (deployedNetwork) {\r\n    contractInstance = new web3.eth.Contract(\r\n      BlogPost.abi,\r\n      deployedNetwork.address\r\n    );\r\n  } else {\r\n    console.error(\"Contract not deployed on the current network\");\r\n  }\r\n}\r\n\r\nasync function displayPosts() {\r\n  const postsContainer = document.getElementById(\"postsContainer\");\r\n  const posts = await contractInstance.methods.getAllPosts().call();\r\n\r\n  posts.forEach((post) => {\r\n    const postElement = document.createElement(\"div\");\r\n    postElement.innerHTML = `\r\n            <div class=\"card mt-3\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">${post.title}</h5>\r\n                    <p class=\"card-text\">${post.content}</p>\r\n                    <p class=\"card-text\">Likes: ${post.likes}</p>\r\n                    <button class=\"btn btn-primary\" onclick=\"likePost(${post.id})\">Like</button>\r\n                </div>\r\n            </div>\r\n        `;\r\n    postsContainer.appendChild(postElement);\r\n  });\r\n}\r\n\r\nasync function createPost() {\r\n  const postTitle = document.getElementById(\"postTitle\").value;\r\n  const postContent = document.getElementById(\"postContent\").value;\r\n\r\n  await contractInstance.methods\r\n    .createPost(postTitle, postContent)\r\n    .send({ from: currentAccount });\r\n\r\n  // Refresh posts after creating a new post\r\n  document.getElementById(\"postsContainer\").innerHTML = \"\";\r\n  await displayPosts();\r\n}\r\n\r\nasync function likePost(postId) {\r\n  const postIdInput = document.getElementById(\"postId\");\r\n  const selectedPostId = postId || postIdInput.value;\r\n\r\n  await contractInstance.methods\r\n    .likePost(selectedPostId)\r\n    .send({ from: currentAccount });\r\n\r\n  // Refresh posts after liking a post\r\n  document.getElementById(\"postsContainer\").innerHTML = \"\";\r\n  await displayPosts();\r\n}\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}