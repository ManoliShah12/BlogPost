{"id":"node_modules/web3-eth-abi/lib/esm/coders/encode.js","dependencies":[{"name":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\encode.js.map","includedInParent":true,"mtime":1702612939927},{"name":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\src\\coders\\encode.ts","includedInParent":true,"mtime":1702612940431},{"name":"C:\\Users\\pmano\\blog-final\\client\\package.json","includedInParent":true,"mtime":1702615691520},{"name":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\package.json","includedInParent":true,"mtime":1702612939709},{"name":"web3-errors","loc":{"line":17,"column":25,"index":680},"parent":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\encode.js","resolved":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-errors\\lib\\esm\\index.js"},{"name":"web3-validator","loc":{"line":18,"column":22,"index":717},"parent":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\encode.js","resolved":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-validator\\dist\\web3-validator.min.js"},{"name":"./base/index.js","loc":{"line":19,"column":28,"index":763},"parent":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\encode.js","resolved":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\base\\index.js"},{"name":"./utils.js","loc":{"line":20,"column":28,"index":810},"parent":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\encode.js","resolved":"C:\\Users\\pmano\\blog-final\\client\\node_modules\\web3-eth-abi\\lib\\esm\\coders\\utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeParameters = encodeParameters;\nvar _web3Errors = require(\"web3-errors\");\nvar _web3Validator = require(\"web3-validator\");\nvar _index = require(\"./base/index.js\");\nvar _utils = require(\"./utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nfunction encodeParameters(abi, params) {\n  if (abi.length !== params.length) {\n    throw new _web3Errors.AbiError('Invalid number of values received for given ABI', {\n      expected: abi.length,\n      received: params.length\n    });\n  }\n  const abiParams = (0, _utils.toAbiParams)(abi);\n  return _web3Validator.utils.uint8ArrayToHexString((0, _index.encodeTuple)({\n    type: 'tuple',\n    name: '',\n    components: abiParams\n  }, params).encoded);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":15}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":18}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":25}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":18}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":21}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":28}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":9,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":9,"column":10}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":9,"column":13}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":9,"column":20}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":10}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":13}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":20}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":28,"column":0}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":16},"generated":{"line":28,"column":9}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":32},"generated":{"line":28,"column":25}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":33},"generated":{"line":28,"column":26}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":61},"generated":{"line":28,"column":29}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":63},"generated":{"line":28,"column":31}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":80},"generated":{"line":28,"column":37}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":23,"column":80},"generated":{"line":28,"column":39}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":1},"generated":{"line":29,"column":2}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":5},"generated":{"line":29,"column":6}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":29,"column":9}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":9},"generated":{"line":29,"column":10}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":15},"generated":{"line":29,"column":16}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":29,"column":21}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":26},"generated":{"line":29,"column":27}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":29,"column":28}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":33},"generated":{"line":29,"column":34}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":24,"column":35},"generated":{"line":29,"column":36}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":30,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":30,"column":10}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":30,"column":14}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":30,"column":34}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":30,"column":35}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":70},"generated":{"line":30,"column":84}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":25,"column":72},"generated":{"line":30,"column":86}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":26,"column":3},"generated":{"line":31,"column":6}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":31,"column":14}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":31,"column":16}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":31,"column":19}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":31,"column":20}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":31,"column":26}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":27,"column":3},"generated":{"line":32,"column":6}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":27,"column":11},"generated":{"line":32,"column":14}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":32,"column":16}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":27,"column":19},"generated":{"line":32,"column":22}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":32,"column":23}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":28,"column":3},"generated":{"line":33,"column":5}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":33,"column":6}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":1},"generated":{"line":35,"column":2}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":7},"generated":{"line":35,"column":8}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":35,"column":17}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":35,"column":20}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":35,"column":24}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":35,"column":42}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":31},"generated":{"line":35,"column":44}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":34},"generated":{"line":35,"column":47}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":35,"column":48}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":31,"column":1},"generated":{"line":36,"column":2}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":36,"column":9}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":36,"column":29}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":36,"column":30}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":31,"column":35},"generated":{"line":36,"column":51}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":36,"column":52}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":36,"column":56}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":13},"generated":{"line":36,"column":74}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":36,"column":76}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":16},"generated":{"line":37,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":20},"generated":{"line":37,"column":8}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":22},"generated":{"line":37,"column":10}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":29},"generated":{"line":37,"column":17}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":31},"generated":{"line":38,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":35},"generated":{"line":38,"column":8}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":37},"generated":{"line":38,"column":10}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":39},"generated":{"line":38,"column":12}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":41},"generated":{"line":39,"column":4}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":51},"generated":{"line":39,"column":14}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":53},"generated":{"line":39,"column":16}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":62},"generated":{"line":40,"column":2}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":64},"generated":{"line":40,"column":3}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":66},"generated":{"line":40,"column":5}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":72},"generated":{"line":40,"column":11}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":73},"generated":{"line":40,"column":12}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":74},"generated":{"line":40,"column":13}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":32,"column":81},"generated":{"line":40,"column":20}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":40,"column":21}},{"source":"../../../src/coders/encode.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":41,"column":0}}],"sources":{"../../../src/coders/encode.ts":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiInput } from 'web3-types';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base/index.js';\nimport { toAbiParams } from './utils.js';\n\nexport function encodeParameters(abi: ReadonlyArray<AbiInput>, params: unknown[]): string {\n\tif (abi.length !== params.length) {\n\t\tthrow new AbiError('Invalid number of values received for given ABI', {\n\t\t\texpected: abi.length,\n\t\t\treceived: params.length,\n\t\t});\n\t}\n\tconst abiParams = toAbiParams(abi);\n\treturn utils.uint8ArrayToHexString(\n\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t);\n}\n"},"lineCount":null}},"error":null,"hash":"e5586accd6112cd326d2945e64c20eef","cacheData":{"env":{}}}